version: '3.0'

networks:
  foodapi_network:
    external: true

services:
  tank-server:
    image: edikgoose/yandex-tank-api:latest
    container_name: tank
    dns: 8.8.8.8
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - influx
      - grafana
    ports:
      - "8887:8888"
    volumes:
      - ${PWD}/tests:/var/loadtest
    networks: &network
      - foodapi_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1Gb

  influx:
    image: influxdb:1.8
    container_name: influx
    ports:
      - "8086:8086"
    environment:
      INFLUXDB_DB: metrics
    networks: *network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    dns: 8.8.8.8
    ports:
      - "3001:3000"
    volumes:
      - ${PWD}/grafana/provisioning:/etc/grafana/provisioning/
      - ${PWD}/grafana/data/dashboards:/var/lib/grafana/dashboards/
      - ${PWD}/grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_INFLUX_DB_URL: http://influx:8086
    restart: on-failure
    networks: *network

  postgresql:
    image: postgres:12
    container_name: load-generator-postgres
    ports:
      - "5421:5432"
    environment:
      - POSTGRES_DB=load_generator_adapter
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    networks: *network

  orchestrator:
    image: edikgoose/load-generator-adapter:latest
    container_name: load-generator-adapter
    ports:
      - "8087:8087"
    networks: *network
    environment:
      - DB_URL=jdbc:postgresql://postgresql:5432/load_generator_adapter
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - CONSUL_URL=http://consul:8500
      - YANDEX_TANK_BASE_URL=http://tank-server:8888

  consul:
    image: hashicorp/consul:1.18
    container_name: consul-test
    hostname: localhost
    ports:
      - "8500:8500"
    networks: *network
